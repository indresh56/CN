#include stdio.h
#include stdlib.h
#include poll.h
#include unistd.h
#include fcntl.h

int main() {
    struct pollfd fds[2];
    int timeout_msecs = 5000;   5 seconds timeout

     Monitor standard input (fd 0)
    fds[0].fd = 0;   File descriptor for standard input (stdin)
    fds[0].events = POLLIN;   Monitor for data to read

     Open a file for monitoring
    int fd = open(testfile.txt, O_RDONLY);
    if (fd  0) {
        perror(open);
        return 1;
    }

    fds[1].fd = fd;   File descriptor for the file
    fds[1].events = POLLIN;   Monitor for data to read

    int ret = poll(fds, 2, timeout_msecs);

    if (ret == -1) {
        perror(poll);
        return 1;
    } else if (ret == 0) {
        printf(Timeout occurred! No data available.n);
    } else {
        if (fds[0].revents & POLLIN) {
            printf(Data is available to read from stdin.n);
        }
        if (fds[1].revents & POLLIN) {
            printf(Data is available to read from the file.n);
        }
    }

    close(fd);
    return 0;
}
